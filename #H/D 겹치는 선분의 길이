#include <string>
#include <vector>
#include <map>
#include <algorithm>
using namespace std;

// 선분 3개가 평행하게 놓여 있습니다. 세 선분의 시작과 끝 좌표가 [[start, end], [start, end], [start, end]] 형태로 들어있는 2차원 배열 lines가 매개변수로 주어질 때, 두 개 이상의 선분이 겹치는 부분의 길이를 return 하도록
// solution 함수를 완성해보세요. lines가 [[0, 2], [-3, -1], [-2, 1]]일 때 그림으로 나타내면 다음과 같습니다. 선분이 두 개 이상 겹친 곳은 [-2, -1], [0, 1]로 길이 2만큼 겹쳐있습니다.
int solution(vector<vector<int>> lines)
{
    int answer = 0;
    int minIndex = min({lines[0][0], lines[1][0], lines[2][0]});
    int maxIndex = max({lines[0][1], lines[1][1], lines[2][1]});
    
    map<int, int> counts;
    
    for (int i = minIndex; i <= maxIndex; i++)
    {
        for(int j = 0; j < 3; j++)
        {
            if (i > lines[j][0] && i <= lines[j][1])
                counts[i]++;
        }
    }
    
    for (int i = minIndex; i <= maxIndex; i++)
    {
        if (counts[i] > 1)
            answer++;
    }
    
    return answer;
}
